/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import { useLayoutEffect } from 'react';
import { useGLTF, Html, Mask, useMask } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import styles from '@/components/Website/website.module.css';
import Website from '@/components/Website';

type GLTFResult = GLTF & {
  nodes: {
    Circle038: THREE.Mesh;
    Circle038_1: THREE.Mesh;
    Circle038_2: THREE.Mesh;
    Circle038_3: THREE.Mesh;
    Circle038_4: THREE.Mesh;
    AntennaLineBottom001: THREE.Mesh;
    AntennaLineTop001: THREE.Mesh;
    AppleLogo001: THREE.Mesh;
    BackCameraBottomGreyRing001: THREE.Mesh;
    BackCameraBottomLens001: THREE.Mesh;
    BackCameraP1001: THREE.Mesh;
    BackCameraTopGreyRing001: THREE.Mesh;
    BackCameraTopLens001: THREE.Mesh;
    CameraBump001: THREE.Mesh;
    FlashBG001: THREE.Mesh;
    FrontCameraContainer001: THREE.Mesh;
    FrontSpeakerBG001: THREE.Mesh;
    iPhoneLogo001: THREE.Mesh;
    MuteSwitch001: THREE.Mesh;
    Circle032: THREE.Mesh;
    Circle032_1: THREE.Mesh;
    Circle031: THREE.Mesh;
    Circle031_1: THREE.Mesh;
    SCREEN: THREE.Mesh;
    VolumeButtons001: THREE.Mesh;
  };
  materials: {
    ['FrameGrey.001']: THREE.MeshStandardMaterial;
    ['Front.001']: THREE.MeshStandardMaterial;
    ['Antennaline.001']: THREE.MeshStandardMaterial;
    ['BackGrey.001']: THREE.MeshStandardMaterial;
    ['Rubber.001']: THREE.MeshStandardMaterial;
    ['AppleLogo.001']: THREE.MeshStandardMaterial;
    ['BackCaneraGrayRIng.002']: THREE.MeshStandardMaterial;
    ['Lens.001']: THREE.MeshStandardMaterial;
    ['Black.015']: THREE.MeshStandardMaterial;
    ['Frame.001']: THREE.MeshStandardMaterial;
    ['PinkFlash.002']: THREE.MeshStandardMaterial;
    ['FrontCameraBlack.002']: THREE.MeshStandardMaterial;
    ['FrontSpeaker.001']: THREE.MeshStandardMaterial;
    ['iPhoneLogo.001']: THREE.MeshStandardMaterial;
    ['Black.014']: THREE.MeshStandardMaterial;
    ['Display.002']: THREE.MeshStandardMaterial;
  };
};

export default function Iphone({ ...props }: JSX.IntrinsicElements['group']) {
  // const [hidden, set] = useState();
  // const screenTop = useRef(null);
  const stencil = useMask(1, true);
  const { nodes, materials } = useGLTF('./models/iphone.gltf') as GLTFResult;

  useLayoutEffect(() => {
    Object.values(nodes).forEach(
      (node) => node.material && Object.assign(node.material, stencil),
    );
  }, []);
  return (
    <group {...props} dispose={null}>
      <group position={[0, 1.563, 0]}>
        <mesh
          geometry={nodes.Circle038.geometry}
          material={materials['FrameGrey.001']}
        />
        <mesh
          geometry={nodes.Circle038_2.geometry}
          material={materials['Antennaline.001']}
        />
        <mesh
          geometry={nodes.Circle038_3.geometry}
          material={materials['BackGrey.001']}
        />
        <mesh
          geometry={nodes.Circle038_4.geometry}
          material={materials['Rubber.001']}
        />
        <mesh
          geometry={nodes.AntennaLineBottom001.geometry}
          material={materials['Antennaline.001']}
          position={[0, -2.676, 0]}
        />
        <mesh
          geometry={nodes.AntennaLineTop001.geometry}
          material={materials['Antennaline.001']}
          position={[0, 0.018, 0]}
        />
        <mesh
          geometry={nodes.iPhoneLogo001.geometry}
          material={materials['iPhoneLogo.001']}
          position={[0.2, -1.175, -0.079]}
        />
        <mesh
          geometry={nodes.MuteSwitch001.geometry}
          material={materials['FrameGrey.001']}
          position={[-0.65, 0.92, 0.009]}
        />
        <group position={[0.97, 0.562, -0.004]}>
          <mesh
            geometry={nodes.Circle032.geometry}
            material={materials['FrameGrey.001']}
          />
          <mesh
            geometry={nodes.Circle032_1.geometry}
            material={materials['Frame.001']}
          />
        </group>
        <mesh
          geometry={nodes.VolumeButtons001.geometry}
          material={materials['FrameGrey.001']}
          position={[-0.658, 0.208, -0.002]}
        />
        <Mask id={1} geometry={nodes.SCREEN.geometry}>
          {/* <meshStandardMaterial wireframe /> */}
          <Html
            className={styles.contentEmbed}
            transform
            scale={0.1}
            position={[0.16, -0.24, 0.08]}
          >
            <Website />
          </Html>
        </Mask>

        {/* <mesh
          geometry={nodes.SCREEN.geometry}
          onClick={(e) => console.log(e)}
          position-z={0.0}
        >
          <meshStandardMaterial transparent opacity={0.1} />
        </mesh> */}
        <group>
          <mesh
            geometry={nodes.Circle038_1.geometry}
            material={materials['Front.001']}
            position-z={0}
          />
          <mesh
            geometry={nodes.FrontCameraContainer001.geometry}
            material={materials['FrontCameraBlack.002']}
            position={[0.335, 1.323, 0.1]}
          />
          <mesh
            geometry={nodes.FrontSpeakerBG001.geometry}
            material={materials['FrontSpeaker.001']}
            position={[0.156, 1.321, 0.09]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('./models/iphone.gltf');
